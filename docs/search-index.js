var searchIndex = {};
searchIndex["psas_telemetry"] = {"doc":"PSAS Telemetry","items":[[0,"messages","psas_telemetry","",null,null],[5,"to_csv","psas_telemetry::messages","Attempt to read Message body based on it's fourcc and convert to a CSV line of scaled, unit-converted values",null,null],[5,"to_values","","Attempt to read Message body based on it's fourcc and convert to a map of scaled, unit-converted values",null,null],[0,"adis","","Module for the ADIS16405 IMU telemetry messages.",null,null],[3,"ADIS_raw","psas_telemetry::messages::adis","Raw data from the Analog Devices `ADIS16405` 9DOF IMU",null,null],[12,"vcc","","Bus voltage",0,null],[12,"gyro_x","","X axis value from rate-gyroscope",0,null],[12,"gyro_y","","Y axis value from rate-gyroscope",0,null],[12,"gyro_z","","Z axis value from rate-gyroscope",0,null],[12,"acc_x","","X axis value from accelerometer",0,null],[12,"acc_y","","Y axis value from accelerometer",0,null],[12,"acc_z","","Z axis value from accelerometer",0,null],[12,"magn_x","","X axis value from magnetometer",0,null],[12,"magn_y","","Y axis value from magnetometer",0,null],[12,"magn_z","","Z axis value from magnetometer",0,null],[12,"temp","","Unit temperature",0,null],[12,"aux_adc","","Aux ADC value",0,null],[3,"ADIS","","Raw data from the Analog Devices `ADIS16405` 9DOF IMU",null,null],[12,"vcc","","Bus voltage [Volt]",1,null],[12,"gyro_x","","X axis value from rate-gyroscope [deg/s]",1,null],[12,"gyro_y","","Y axis value from rate-gyroscope [deg/s]",1,null],[12,"gyro_z","","Z axis value from rate-gyroscope [deg/s]",1,null],[12,"acc_x","","X axis value from accelerometer [g]",1,null],[12,"acc_y","","Y axis value from accelerometer [g]",1,null],[12,"acc_z","","Z axis value from accelerometer [g]",1,null],[12,"magn_x","","X axis value from magnetometer [tesla]",1,null],[12,"magn_y","","Y axis value from magnetometer [tesla]",1,null],[12,"magn_z","","Z axis value from magnetometer [tesla]",1,null],[12,"temp","","Unit temperature [째C]",1,null],[12,"aux_adc","","Aux ADC value [volt]",1,null],[5,"read_raw","","Read the body and return unpacked struct of raw values",null,{"inputs":[{"name":"vec"}],"output":{"name":"adis_raw"}}],[11,"from_raw","","Convert a ADIS_raw struct to a converted units struct by applying scaleing",1,{"inputs":[{"name":"adis_raw"}],"output":{"name":"adis"}}],[11,"to_csv_line","","Convert values to a single line suitable for a CSV file (ex: \"12.0,-15.2,1352.8123,\")",1,{"inputs":[{"name":"self"}],"output":{"name":"string"}}],[11,"to_dict","","convert values to a dictionary where the key is a string (ex: {'value_1': 12.0, 'value_2': -15.2})",1,{"inputs":[{"name":"self"}],"output":{"name":"hashmap"}}],[0,"bmp1","psas_telemetry::messages","Module for the BMP180 Pressure sensor telemetry messages.",null,null],[3,"BMP1_raw","psas_telemetry::messages::bmp1","Raw data from BMP180",null,null],[12,"pressure","","Pressure data",2,null],[12,"temperature","","Temperature data",2,null],[3,"BMP1","","Raw data from BMP180",null,null],[12,"pressure","","Pressure data []",3,null],[12,"temperature","","Temperature data []",3,null],[5,"read_raw","","Read the body and return unpacked struct of raw values",null,{"inputs":[{"name":"vec"}],"output":{"name":"bmp1_raw"}}],[11,"from_raw","","Convert a BMP1_raw struct to a converted units struct by applying scaleing",3,{"inputs":[{"name":"bmp1_raw"}],"output":{"name":"bmp1"}}],[11,"to_csv_line","","Convert values to a single line suitable for a CSV file (ex: \"12.0,-15.2,1352.8123,\")",3,{"inputs":[{"name":"self"}],"output":{"name":"string"}}],[11,"to_dict","","convert values to a dictionary where the key is a string (ex: {'value_1': 12.0, 'value_2': -15.2})",3,{"inputs":[{"name":"self"}],"output":{"name":"hashmap"}}],[0,"fcfh","psas_telemetry::messages","Module for the FC Health telemetry messages.",null,null],[3,"FCFH_raw","psas_telemetry::messages::fcfh","Main flight computer software health",null,null],[12,"cpu_user","","CPU use in user space",4,null],[12,"cpu_system","","CPU use in kernel space",4,null],[12,"cpu_nice","","CPU use in running users' processes that have been 'niced'",4,null],[12,"cpu_iowait","","CPU use spent waiting for I/O to complete",4,null],[12,"cpu_irq","","CPU use spent for servicing hardware interrupts",4,null],[12,"cpu_softirq","","CPU use spent for servicing software interrupts",4,null],[12,"ram_used","","Ram currently in use",4,null],[12,"ram_buffer","","Ram currently in use, cache for things like file system metadata",4,null],[12,"ram_cached","","Ram currently in use, cache for various things",4,null],[12,"pid","","Number of PIDs currently running",4,null],[12,"disk_used","","Amount of disk space currently used",4,null],[12,"disk_buffer","","Amount of disk space currently buffered",4,null],[12,"disk_cached","","Amount of disk space currently cached",4,null],[12,"io_lo_bytes_sent","","Bytes sent on the loopback interface (localhost)",4,null],[12,"io_lo_bytes_recv","","Bytes recieved on the loopback interface (localhost)",4,null],[12,"io_lo_packets_sent","","Packets sent on the loopback interface (localhost)",4,null],[12,"io_lo_packets_recv","","Packets recieved on the loopback interface (localhost)",4,null],[12,"io_eth0_bytes_sent","","Bytes sent on the `eth0` interface",4,null],[12,"io_eth0_bytes_recv","","Bytes recieved on the `eth0` interface",4,null],[12,"io_eth0_packets_sent","","Packets sent on the `eth0` interface",4,null],[12,"io_eth0_packets_recv","","Packets recieved on the `eth0` interface",4,null],[12,"io_wlan0_bytes_sent","","Bytes sent on the `wlan0` interface",4,null],[12,"io_wlan0_bytes_recv","","Bytes recieved on the `wlan0` interface",4,null],[12,"io_wlan0_packets_sent","","Packets sent on the `wlan0` interface",4,null],[12,"io_wlan0_packets_recv","","Packets recieved on the `wlan0` interface",4,null],[12,"core_temp","","Temperature of the processor",4,null],[3,"FCFH","","Main flight computer software health",null,null],[12,"cpu_user","","CPU use in user space [%]",5,null],[12,"cpu_system","","CPU use in kernel space [%]",5,null],[12,"cpu_nice","","CPU use in running users' processes that have been 'niced' [%]",5,null],[12,"cpu_iowait","","CPU use spent waiting for I/O to complete [%]",5,null],[12,"cpu_irq","","CPU use spent for servicing hardware interrupts [%]",5,null],[12,"cpu_softirq","","CPU use spent for servicing software interrupts [%]",5,null],[12,"ram_used","","Ram currently in use [Bytes]",5,null],[12,"ram_buffer","","Ram currently in use, cache for things like file system metadata [Bytes]",5,null],[12,"ram_cached","","Ram currently in use, cache for various things [Bytes]",5,null],[12,"pid","","Number of PIDs currently running [#]",5,null],[12,"disk_used","","Amount of disk space currently used [Bytes]",5,null],[12,"disk_buffer","","Amount of disk space currently buffered [Bytes]",5,null],[12,"disk_cached","","Amount of disk space currently cached [Bytes]",5,null],[12,"io_lo_bytes_sent","","Bytes sent on the loopback interface (localhost) [Bytes]",5,null],[12,"io_lo_bytes_recv","","Bytes recieved on the loopback interface (localhost) [Bytes]",5,null],[12,"io_lo_packets_sent","","Packets sent on the loopback interface (localhost) [#]",5,null],[12,"io_lo_packets_recv","","Packets recieved on the loopback interface (localhost) [#]",5,null],[12,"io_eth0_bytes_sent","","Bytes sent on the `eth0` interface [Bytes]",5,null],[12,"io_eth0_bytes_recv","","Bytes recieved on the `eth0` interface [Bytes]",5,null],[12,"io_eth0_packets_sent","","Packets sent on the `eth0` interface [#]",5,null],[12,"io_eth0_packets_recv","","Packets recieved on the `eth0` interface [#]",5,null],[12,"io_wlan0_bytes_sent","","Bytes sent on the `wlan0` interface [Bytes]",5,null],[12,"io_wlan0_bytes_recv","","Bytes recieved on the `wlan0` interface [Bytes]",5,null],[12,"io_wlan0_packets_sent","","Packets sent on the `wlan0` interface [#]",5,null],[12,"io_wlan0_packets_recv","","Packets recieved on the `wlan0` interface [#]",5,null],[12,"core_temp","","Temperature of the processor [째C]",5,null],[5,"read_raw","","Read the body and return unpacked struct of raw values",null,{"inputs":[{"name":"vec"}],"output":{"name":"fcfh_raw"}}],[11,"from_raw","","Convert a FCFH_raw struct to a converted units struct by applying scaleing",5,{"inputs":[{"name":"fcfh_raw"}],"output":{"name":"fcfh"}}],[11,"to_csv_line","","Convert values to a single line suitable for a CSV file (ex: \"12.0,-15.2,1352.8123,\")",5,{"inputs":[{"name":"self"}],"output":{"name":"string"}}],[11,"to_dict","","convert values to a dictionary where the key is a string (ex: {'value_1': 12.0, 'value_2': -15.2})",5,{"inputs":[{"name":"self"}],"output":{"name":"hashmap"}}],[0,"rnhh","psas_telemetry::messages","Module for the RNH Health telemetry messages.",null,null],[3,"RNHH_raw","psas_telemetry::messages::rnhh","Rocket Net Hub hardware Health",null,null],[12,"temperature","","Temperature of the main PCB",6,null],[12,"ts1temperature","","Temperature of battery sensor 1",6,null],[12,"ts2temperature","","Temperature of battery sensor 2",6,null],[12,"temprange","","",6,null],[12,"voltage","","System voltage",6,null],[12,"current","","System current",6,null],[12,"averagecurrent","","System current (average)",6,null],[12,"cellvoltage1","","Battery cell #1 volts",6,null],[12,"cellvoltage2","","Battery cell #2 volts",6,null],[12,"cellvoltage3","","Battery cell #3 volts",6,null],[12,"cellvoltage4","","Battery cell #4 volts",6,null],[12,"packvoltage","","Battery pack voltage",6,null],[12,"averagevoltage","","Battery pack voltage (average)",6,null],[3,"RNHH","","Rocket Net Hub hardware Health",null,null],[12,"temperature","","Temperature of the main PCB [Kelvin]",7,null],[12,"ts1temperature","","Temperature of battery sensor 1 [째C]",7,null],[12,"ts2temperature","","Temperature of battery sensor 2 [째C]",7,null],[12,"temprange","","[]",7,null],[12,"voltage","","System voltage [Volts]",7,null],[12,"current","","System current [Amps]",7,null],[12,"averagecurrent","","System current (average) [Amps]",7,null],[12,"cellvoltage1","","Battery cell #1 volts [Volt]",7,null],[12,"cellvoltage2","","Battery cell #2 volts [Volt]",7,null],[12,"cellvoltage3","","Battery cell #3 volts [Volt]",7,null],[12,"cellvoltage4","","Battery cell #4 volts [Volt]",7,null],[12,"packvoltage","","Battery pack voltage [Volt]",7,null],[12,"averagevoltage","","Battery pack voltage (average) [Volt]",7,null],[5,"read_raw","","Read the body and return unpacked struct of raw values",null,{"inputs":[{"name":"vec"}],"output":{"name":"rnhh_raw"}}],[11,"from_raw","","Convert a RNHH_raw struct to a converted units struct by applying scaleing",7,{"inputs":[{"name":"rnhh_raw"}],"output":{"name":"rnhh"}}],[11,"to_csv_line","","Convert values to a single line suitable for a CSV file (ex: \"12.0,-15.2,1352.8123,\")",7,{"inputs":[{"name":"self"}],"output":{"name":"string"}}],[11,"to_dict","","convert values to a dictionary where the key is a string (ex: {'value_1': 12.0, 'value_2': -15.2})",7,{"inputs":[{"name":"self"}],"output":{"name":"hashmap"}}],[0,"rnhp","psas_telemetry::messages","Module for the Rocket Net Hub Power telemetry messages.",null,null],[3,"RNHP_raw","psas_telemetry::messages::rnhp","Power stats from the RNH",null,null],[12,"port1","","Port 1 power",8,null],[12,"port2","","Port 2 power",8,null],[12,"port3","","Port 3 power",8,null],[12,"port4","","Port 4 power",8,null],[12,"umbilical","","Umbilical power, power entering the rocket from shore power",8,null],[12,"port6","","Port 6 power",8,null],[12,"port7","","Port 7 power",8,null],[12,"port8","","Port 8 power",8,null],[3,"RNHP","","Power stats from the RNH",null,null],[12,"port1","","Port 1 power [Amp]",9,null],[12,"port2","","Port 2 power [Amp]",9,null],[12,"port3","","Port 3 power [Amp]",9,null],[12,"port4","","Port 4 power [Amp]",9,null],[12,"umbilical","","Umbilical power, power entering the rocket from shore power [Amp]",9,null],[12,"port6","","Port 6 power [Amp]",9,null],[12,"port7","","Port 7 power [Amp]",9,null],[12,"port8","","Port 8 power [Amp]",9,null],[5,"read_raw","","Read the body and return unpacked struct of raw values",null,{"inputs":[{"name":"vec"}],"output":{"name":"rnhp_raw"}}],[11,"from_raw","","Convert a RNHP_raw struct to a converted units struct by applying scaleing",9,{"inputs":[{"name":"rnhp_raw"}],"output":{"name":"rnhp"}}],[11,"to_csv_line","","Convert values to a single line suitable for a CSV file (ex: \"12.0,-15.2,1352.8123,\")",9,{"inputs":[{"name":"self"}],"output":{"name":"string"}}],[11,"to_dict","","convert values to a dictionary where the key is a string (ex: {'value_1': 12.0, 'value_2': -15.2})",9,{"inputs":[{"name":"self"}],"output":{"name":"hashmap"}}],[0,"rnhu","psas_telemetry::messages","Module for the Umbilical Detect telemetry messages.",null,null],[3,"RNHU_raw","psas_telemetry::messages::rnhu","Triggered when the Umbilical disconnect signal changes",null,null],[12,"detect","","Dectect state change",10,null],[3,"RNHU","","Triggered when the Umbilical disconnect signal changes",null,null],[12,"detect","","Dectect state change []",11,null],[5,"read_raw","","Read the body and return unpacked struct of raw values",null,{"inputs":[{"name":"vec"}],"output":{"name":"rnhu_raw"}}],[11,"from_raw","","Convert a RNHU_raw struct to a converted units struct by applying scaleing",11,{"inputs":[{"name":"rnhu_raw"}],"output":{"name":"rnhu"}}],[11,"to_csv_line","","Convert values to a single line suitable for a CSV file (ex: \"12.0,-15.2,1352.8123,\")",11,{"inputs":[{"name":"self"}],"output":{"name":"string"}}],[11,"to_dict","","convert values to a dictionary where the key is a string (ex: {'value_1': 12.0, 'value_2': -15.2})",11,{"inputs":[{"name":"self"}],"output":{"name":"hashmap"}}],[0,"roll","psas_telemetry::messages","Module for the Roll Servo Commands telemetry messages.",null,null],[3,"ROLL_raw","psas_telemetry::messages::roll","Commands sent to the Roll server from the flight comptuer",null,null],[12,"angle","","Expected commanded angle",12,null],[12,"disable","","Disable flag",12,null],[3,"ROLL","","Commands sent to the Roll server from the flight comptuer",null,null],[12,"angle","","Expected commanded angle [angle]",13,null],[12,"disable","","Disable flag []",13,null],[5,"read_raw","","Read the body and return unpacked struct of raw values",null,{"inputs":[{"name":"vec"}],"output":{"name":"roll_raw"}}],[11,"from_raw","","Convert a ROLL_raw struct to a converted units struct by applying scaleing",13,{"inputs":[{"name":"roll_raw"}],"output":{"name":"roll"}}],[11,"to_csv_line","","Convert values to a single line suitable for a CSV file (ex: \"12.0,-15.2,1352.8123,\")",13,{"inputs":[{"name":"self"}],"output":{"name":"string"}}],[11,"to_dict","","convert values to a dictionary where the key is a string (ex: {'value_1': 12.0, 'value_2': -15.2})",13,{"inputs":[{"name":"self"}],"output":{"name":"hashmap"}}],[0,"seqe","psas_telemetry::messages","Module for the Sequence Number Error telemetry messages.",null,null],[3,"SEQE_raw","psas_telemetry::messages::seqe","Error message from the flight computer if it receives and out-of-order packet",null,null],[12,"port","","Which port the packet was recieved on",14,null],[12,"expected","","Expected sequence number",14,null],[12,"received","","Actual sequence number recieved",14,null],[3,"SEQE","","Error message from the flight computer if it receives and out-of-order packet",null,null],[12,"port","","Which port the packet was recieved on []",15,null],[12,"expected","","Expected sequence number []",15,null],[12,"received","","Actual sequence number recieved []",15,null],[5,"read_raw","","Read the body and return unpacked struct of raw values",null,{"inputs":[{"name":"vec"}],"output":{"name":"seqe_raw"}}],[11,"from_raw","","Convert a SEQE_raw struct to a converted units struct by applying scaleing",15,{"inputs":[{"name":"seqe_raw"}],"output":{"name":"seqe"}}],[11,"to_csv_line","","Convert values to a single line suitable for a CSV file (ex: \"12.0,-15.2,1352.8123,\")",15,{"inputs":[{"name":"self"}],"output":{"name":"string"}}],[11,"to_dict","","convert values to a dictionary where the key is a string (ex: {'value_1': 12.0, 'value_2': -15.2})",15,{"inputs":[{"name":"self"}],"output":{"name":"hashmap"}}],[0,"v8a8","psas_telemetry::messages","Module for the Venus8 Navigation Message telemetry messages.",null,null],[3,"V8A8_raw","psas_telemetry::messages::v8a8","Venus8 Navigation Message",null,null],[12,"fix_mode","","Mode of the fix (none, 2D, 3D, etc.)",16,null],[12,"num_sv","","Number of currently sats locked",16,null],[12,"gps_week","","GPS week number",16,null],[12,"tow","","GPS Time of week",16,null],[12,"latitude","","WGS84 Latitude",16,null],[12,"longitude","","WGS84 Longitude",16,null],[12,"ellipsoid_altitude","","Altiutude above the WGS84 ellipsoid",16,null],[12,"msl_altitude","","Altiutude above WGS84 Mean Sea Level",16,null],[12,"gdop","","GDOP",16,null],[12,"pdop","","PDOP",16,null],[12,"hdop","","HDOP",16,null],[12,"tdop","","TDOP",16,null],[12,"ecef_x","","ECEF X Position",16,null],[12,"ecef_y","","ECEF Y Position",16,null],[12,"ecef_z","","ECEF Z Position",16,null],[12,"ecef_vx","","ECEF X Velocity",16,null],[12,"ecef_vy","","ECEF Y Velocity",16,null],[12,"ecef_vz","","ECEF Z Velocity",16,null],[3,"V8A8","","Venus8 Navigation Message",null,null],[12,"fix_mode","","Mode of the fix (none, 2D, 3D, etc.) []",17,null],[12,"num_sv","","Number of currently sats locked [#]",17,null],[12,"gps_week","","GPS week number []",17,null],[12,"tow","","GPS Time of week [s]",17,null],[12,"latitude","","WGS84 Latitude [째]",17,null],[12,"longitude","","WGS84 Longitude [째]",17,null],[12,"ellipsoid_altitude","","Altiutude above the WGS84 ellipsoid [m]",17,null],[12,"msl_altitude","","Altiutude above WGS84 Mean Sea Level [m]",17,null],[12,"gdop","","GDOP []",17,null],[12,"pdop","","PDOP []",17,null],[12,"hdop","","HDOP []",17,null],[12,"tdop","","TDOP []",17,null],[12,"ecef_x","","ECEF X Position [m]",17,null],[12,"ecef_y","","ECEF Y Position [m]",17,null],[12,"ecef_z","","ECEF Z Position [m]",17,null],[12,"ecef_vx","","ECEF X Velocity [m/s]",17,null],[12,"ecef_vy","","ECEF Y Velocity [m/s]",17,null],[12,"ecef_vz","","ECEF Z Velocity [m/s]",17,null],[5,"read_raw","","Read the body and return unpacked struct of raw values",null,{"inputs":[{"name":"vec"}],"output":{"name":"v8a8_raw"}}],[11,"from_raw","","Convert a V8A8_raw struct to a converted units struct by applying scaleing",17,{"inputs":[{"name":"v8a8_raw"}],"output":{"name":"v8a8"}}],[11,"to_csv_line","","Convert values to a single line suitable for a CSV file (ex: \"12.0,-15.2,1352.8123,\")",17,{"inputs":[{"name":"self"}],"output":{"name":"string"}}],[11,"to_dict","","convert values to a dictionary where the key is a string (ex: {'value_1': 12.0, 'value_2': -15.2})",17,{"inputs":[{"name":"self"}],"output":{"name":"hashmap"}}]],"paths":[[3,"ADIS_raw"],[3,"ADIS"],[3,"BMP1_raw"],[3,"BMP1"],[3,"FCFH_raw"],[3,"FCFH"],[3,"RNHH_raw"],[3,"RNHH"],[3,"RNHP_raw"],[3,"RNHP"],[3,"RNHU_raw"],[3,"RNHU"],[3,"ROLL_raw"],[3,"ROLL"],[3,"SEQE_raw"],[3,"SEQE"],[3,"V8A8_raw"],[3,"V8A8"]]};
initSearch(searchIndex);
